{"version":3,"file":"app~b6ab853d.8c918e9babf358fa8a5f.bundle.js","mappings":"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","sources":["webpack://app-starter-project-with-webpack/./src/scripts/utils/notification.js","webpack://app-starter-project-with-webpack/./src/scripts/presenters/auth-presenter.js","webpack://app-starter-project-with-webpack/./src/scripts/presenters/about-presenter.js","webpack://app-starter-project-with-webpack/./src/scripts/utils/index.js","webpack://app-starter-project-with-webpack/./src/scripts/presenters/story-presenter.js","webpack://app-starter-project-with-webpack/./src/scripts/routes/url-parser.js","webpack://app-starter-project-with-webpack/./src/scripts/presenters/bookmark-presenter.js","webpack://app-starter-project-with-webpack/./src/scripts/routes/routes.js","webpack://app-starter-project-with-webpack/./src/scripts/presenters/home-presenter.js"],"sourcesContent":["import CONFIG from '../config';\nimport DicodingStoryApi from '../data/api';\nimport Auth from '../data/auth';\n\nclass NotificationService {\n  static async requestPermission() {\n    if (!('Notification' in window)) {\n      console.log('This browser does not support notifications.');\n      return false;\n    }\n\n    if (Notification.permission === 'granted') {\n      return true;\n    }\n\n    const permission = await Notification.requestPermission();\n    return permission === 'granted';\n  }\n\n  static async subscribe() {\n    if (!('serviceWorker' in navigator)) {\n      console.log('This browser does not support service workers.');\n      return false;\n    }\n\n    const permissionGranted = await this.requestPermission();\n    if (!permissionGranted) {\n      console.log('Notification permission denied.');\n      return false;\n    }\n\n    try {\n      const registration = await navigator.serviceWorker.ready;\n      const subscription = await registration.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey: this._urlBase64ToUint8Array(CONFIG.VAPID_PUBLIC_KEY),\n      });\n\n      const token = Auth.getUserToken();\n      if (token) {\n        await DicodingStoryApi.subscribePushNotification({ token, subscription });\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Error subscribing to push notifications:', error);\n      return false;\n    }\n  }\n\n  static async unsubscribe() {\n    if (!('serviceWorker' in navigator)) {\n      console.log('This browser does not support service workers.');\n      return false;\n    }\n\n    try {\n      const registration = await navigator.serviceWorker.ready;\n      const subscription = await registration.pushManager.getSubscription();\n\n      if (subscription) {\n        const token = Auth.getUserToken();\n        if (token) {\n          await DicodingStoryApi.unsubscribePushNotification({\n            token,\n            endpoint: subscription.endpoint,\n          });\n        }\n        await subscription.unsubscribe();\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Error unsubscribing from push notifications:', error);\n      return false;\n    }\n  }\n\n  static showNotification(title, options) {\n    if (!('Notification' in window)) return;\n\n    if (Notification.permission === 'granted') {\n      const notification = new Notification(title, {\n        icon: 'icons/icon-192x192.png',\n        badge: 'icons/icon-192x192.png',\n        ...options\n      });\n      \n      notification.onclick = (event) => {\n        event.preventDefault();\n        window.focus();\n        window.location.href = './';\n      };\n    }\n  }\n\n  static _urlBase64ToUint8Array(base64String) {\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n    const base64 = (base64String + padding)\n      .replace(/-/g, '+')\n      .replace(/_/g, '/');\n\n    const rawData = window.atob(base64);\n    const outputArray = new Uint8Array(rawData.length);\n\n    for (let i = 0; i < rawData.length; ++i) {\n      outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n  }\n}\n\nexport default NotificationService;","import Auth from '../data/auth';\r\nimport NotificationService from '../utils/notification';\r\n\r\nexport default class AuthPresenter {\r\n  constructor(view) {\r\n    this._view = view;\r\n  }\r\n\r\n  isUserLoggedIn() {\r\n    return Auth.isUserLoggedIn();\r\n  }\r\n\r\n  async login({ email, password }) {\r\n    try {\r\n      await Auth.login({ email, password });\r\n      await NotificationService.subscribe();\r\n      this._view.redirectToHome();\r\n    } catch (error) {\r\n      this._view.showError(error.message);\r\n    }\r\n  }\r\n\r\n  async register({ name, email, password }) {\r\n    try {\r\n      await Auth.register({ name, email, password });\r\n      this._view.showSuccessAndRedirect();\r\n    } catch (error) {\r\n      this._view.showError(error.message);\r\n    }\r\n  }\r\n}","import Auth from '../data/auth';\r\n\r\nexport default class AboutPresenter {\r\n  constructor(view) {\r\n    this._view = view;\r\n  }\r\n\r\n  isUserLoggedIn() {\r\n    return Auth.isUserLoggedIn();\r\n  }\r\n}","export function showFormattedDate(date, locale = 'en-US', options = {}) {\n  if (!date) return 'No date available';\n  \n  try {\n    const dateObj = new Date(date);\n    if (isNaN(dateObj.getTime())) {\n      return 'Invalid date';\n    }\n    return dateObj.toLocaleDateString(locale, {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      ...options,\n    });\n  } catch (error) {\n    console.error('Error formatting date:', error);\n    return 'Invalid date';\n  }\n}\n\nexport function sleep(time = 1000) {\n  return new Promise((resolve) => setTimeout(resolve, time));\n}\n","import StoryRepository from '../data/story-repository';\r\nimport { showFormattedDate } from '../utils';\r\n\r\nexport default class StoryPresenter {\r\n  constructor(view) {\r\n    this._view = view;\r\n    this._repository = StoryRepository;\r\n  }\r\n\r\n  async getAllStories({ page = 1, size = 10, location = 0 }) {\r\n    try {\r\n      const stories = await this._repository.getAllStories({ page, size, location });\r\n      this._view.showStories(stories);\r\n    } catch (error) {\r\n      this._view.showError(error.message);\r\n    }\r\n  }\r\n\r\n  async getStoryDetail(id) {\r\n    try {\r\n      const story = await this._repository.getStoryDetail(id);\r\n      return story;\r\n    } catch (error) {\r\n      this._view.showError(error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async addNewStory({ description, photo, lat, lon }) {\r\n    try {\r\n      const response = await this._repository.addNewStory({ description, photo, lat, lon });\r\n      this._view.showSuccess(response.message);\r\n      return response;\r\n    } catch (error) {\r\n      this._view.showError(error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  formatDate(date) {\r\n    return showFormattedDate(date);\r\n  }\r\n}","function extractPathnameSegments(path) {\r\n  const pathWithoutQuery = path.split('?')[0];\r\n  const splitUrl = pathWithoutQuery.split('/').filter(segment => segment !== '');\r\n\r\n  return {\r\n    resource: splitUrl[0] || null,\r\n    id: splitUrl[1] || null,\r\n    verb: splitUrl[2] || null\r\n  };\r\n}\r\n\r\nfunction constructRouteFromSegments(pathSegments) {\r\n  let pathname = '';\r\n\r\n  if (pathSegments.resource) {\r\n    pathname = `/${pathSegments.resource}`;\r\n    \r\n    if (pathSegments.id === 'add') {\r\n      return `${pathname}/add`;\r\n    }\r\n    \r\n    if (pathSegments.id) {\r\n      pathname += '/:id';\r\n      \r\n      if (pathSegments.verb) {\r\n        pathname += `/${pathSegments.verb}`;\r\n      }\r\n    }\r\n  }\r\n\r\n  return pathname || '/';\r\n}\r\n\r\nexport function getActivePathname() {\r\n  return location.hash.replace('#', '') || '/';\r\n}\r\n\r\nexport function getActiveRoute() {\r\n  const pathname = getActivePathname();\r\n  \r\n  if (pathname === '/stories/add') {\r\n    return '/stories/add';\r\n  }\r\n  \r\n  const urlSegments = extractPathnameSegments(pathname);\r\n  return constructRouteFromSegments(urlSegments);\r\n}\r\n\r\nexport function parseActivePathname() {\r\n  const pathname = getActivePathname();\r\n  return extractPathnameSegments(pathname);\r\n}\r\n\r\nexport function getRoute(pathname) {\r\n  if (pathname === '/stories/add') {\r\n    return '/stories/add';\r\n  }\r\n  \r\n  const urlSegments = extractPathnameSegments(pathname);\r\n  return constructRouteFromSegments(urlSegments);\r\n}\r\n\r\nexport function parsePathname(pathname) {\r\n  return extractPathnameSegments(pathname);\r\n}","import BookmarkDatabase from '../data/bookmark-database';\n\nexport default class BookmarkPresenter {\n  constructor(view) {\n    this._view = view;\n    this._database = BookmarkDatabase;\n  }\n\n  async getAllBookmarks() {\n    try {\n      const bookmarks = await this._database.getAllBookmarks();\n      this._view.showBookmarks(bookmarks);\n    } catch (error) {\n      this._view.showError(error.message);\n    }\n  }\n\n  async toggleBookmark(story) {\n    try {\n      const isBookmarked = await this._database.isBookmarked(story.id);\n      \n      if (isBookmarked) {\n        await this._database.removeBookmark(story.id);\n        this._view.showBookmarkRemoved(story);\n      } else {\n        await this._database.addBookmark(story);\n        this._view.showBookmarkAdded(story);\n      }\n      \n      return !isBookmarked;\n    } catch (error) {\n      this._view.showError(error.message);\n      throw error;\n    }\n  }\n\n  async isBookmarked(id) {\n    return this._database.isBookmarked(id);\n  }\n}","import HomePage from '../pages/home/home-page';\nimport AboutPage from '../pages/about/about-page';\nimport StoriesPage from '../pages/stories/stories-page';\nimport StoryDetailPage from '../pages/story-detail/story-detail-page';\nimport AddStoryPage from '../pages/add-story/add-story-page';\nimport StoryMapPage from '../pages/story-map/story-map-page';\nimport LoginPage from '../pages/auth/login-page';\nimport RegisterPage from '../pages/auth/register-page';\nimport BookmarksPage from '../pages/bookmarks/bookmarks-page';\n\nconst routes = {\n  '/': new HomePage(),\n  '/home': new HomePage(),\n  '/about': new AboutPage(),\n  '/stories': new StoriesPage(),\n  '/stories/:id': new StoryDetailPage(),\n  '/stories/add': new AddStoryPage(),\n  '/map': new StoryMapPage(),\n  '/login': new LoginPage(),\n  '/register': new RegisterPage(),\n  '/bookmarks': new BookmarksPage(),\n};\n\nexport default routes;","import Auth from '../data/auth';\r\n\r\nexport default class HomePresenter {\r\n  constructor(view) {\r\n    this._view = view;\r\n  }\r\n\r\n  isUserLoggedIn() {\r\n    return Auth.isUserLoggedIn();\r\n  }\r\n\r\n  getUserName() {\r\n    return Auth.getUserName();\r\n  }\r\n\r\n  logout() {\r\n    Auth.logout();\r\n  }\r\n}"],"names":["_createClass","NotificationService","_classCallCheck","key","value","_requestPermission","_asyncToGenerator","_regeneratorRuntime","_callee","permission","_context","prev","next","window","abrupt","Notification","requestPermission","sent","stop","apply","arguments","_subscribe","_callee2","registration","subscription","token","_context2","navigator","this","serviceWorker","ready","pushManager","subscribe","userVisibleOnly","applicationServerKey","_urlBase64ToUint8Array","CONFIG","VAPID_PUBLIC_KEY","Auth","getUserToken","DicodingStoryApi","subscribePushNotification","t0","_unsubscribe","_callee3","_context3","getSubscription","unsubscribePushNotification","endpoint","unsubscribe","title","options","notification","_objectSpread","icon","badge","onclick","event","preventDefault","focus","location","href","base64String","base64","repeat","length","replace","rawData","atob","outputArray","Uint8Array","i","charCodeAt","AuthPresenter","view","_view","isUserLoggedIn","_login","_ref","email","password","login","redirectToHome","showError","message","_x","_register","_ref2","name","register","showSuccessAndRedirect","_x2","AboutPresenter","showFormattedDate","date","locale","undefined","dateObj","Date","isNaN","getTime","toLocaleDateString","year","month","day","error","StoryPresenter","_repository","StoryRepository","_getAllStories","_ref$page","page","_ref$size","size","_ref$location","stories","getAllStories","showStories","_getStoryDetail","id","story","getStoryDetail","_addNewStory","description","photo","lat","lon","response","addNewStory","showSuccess","_x3","extractPathnameSegments","path","splitUrl","split","filter","segment","resource","verb","constructRouteFromSegments","pathSegments","pathname","concat","getActivePathname","hash","getActiveRoute","BookmarkPresenter","_database","BookmarkDatabase","_getAllBookmarks","bookmarks","getAllBookmarks","showBookmarks","_toggleBookmark","isBookmarked","removeBookmark","showBookmarkRemoved","addBookmark","showBookmarkAdded","_isBookmarked","HomePage","AboutPage","StoriesPage","StoryDetailPage","AddStoryPage","StoryMapPage","LoginPage","RegisterPage","BookmarksPage","HomePresenter","getUserName","logout"],"sourceRoot":""}